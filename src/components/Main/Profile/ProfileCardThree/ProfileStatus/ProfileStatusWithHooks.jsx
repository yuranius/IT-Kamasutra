import React, { useState, useEffect } from "react";
import scss from "./ProfileStatus.module.scss";

let ProfileStatusWithHooks = (props) => {
	//! ----------------–≤–∞–∂–Ω–æ------------------------- –Ω–µ –£–¥–∞–ª—è—Ç—å-------------
	// üöß let stateWithSetState = useState(true); // –∏—Å–ø–æ–ª—å–∑—É–µ–º Hook
	// üöß let editMode = stateWithSetState[0]; // –∏—Å–ø–æ–ª—å–∑—É–µ–º Hook
	// üöß let setEditMode = stateWithSetState[1]; // –∏—Å–ø–æ–ª—å–∑—É–µ–º Hook

	// üöß  let arr = [0, ()=>{}]; // –¥–µ—Å—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω–∏–µ –º–∞—Å—Å–∏–≤–∞ 
	// üöß  let [a, setA] = arr; // –¥–µ—Å—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω–∏–µ –º–∞—Å—Å–∏–≤–∞ 

	// üåª –° –ø–æ–º–æ—â—å—é –¥–µ—Å—Ç—Ä—É–∫—Ç—É—Ä–∏–∑–∞—Ü–∏–∏ –º–æ–∂–Ω–æ useState –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Å–ª–µ–¥—É—é—â–∏–º –æ–±—Ä–∞–∑–æ–º: üåª
	//! ----------------–≤–∞–∂–Ω–æ------------------------- –Ω–µ –£–¥–∞–ª—è—Ç—å-------------

	let [editMode, setEditMode] = useState(false); //? —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–Ω–∞—á–µ–Ω–∏–µ editMode –≤ false
	let [status, setStatus] = useState(props.status);

	useEffect(()=>{ //? –øe—Ä–µ—Ä–∏—Å–æ–≤—ã–≤–µ—Ç –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—É –∫–æ–≥–¥–∞ –º–µ–Ω—è–µ—Ç—Å—è props.status
		setStatus(props.status);
	}, [props.status]);

	const activateEditeMode = () => {
		setEditMode(true); //? –º–µ–Ω—è–µ–º –∑–Ω–∞—á–µ–Ω–∏–µ editMode –≤ true
	};

	const deactivateEditeMode = () => {
		props.updateStatus(status);
		setEditMode(false);
	};

	const onStatusChange = (e) => {
		setStatus(e.currentTarget.value);
	};

	const pressHeandler = async event => {
		if (event.key ==='Enter'){
			try{
				deactivateEditeMode();
			} catch (event){}
		}
	}

	


	return (
		<div className={scss["body__status"]}>
			{!editMode && (
				<div className={scss["body__status-text"]}>
					<span onClick={props.profile.userId === props.userIdAuth ? activateEditeMode : null}>{props.status || "–°—Ç—É—Ç—É—Å –Ω–µ –¥–æ–±–∞–≤–ª–µ–Ω"}</span>
				</div>
			)}
			{editMode && (
				<div className={scss["body__status-input"]}>
					<input 
					autoFocus={true} 
					type="text" 
					onChange={onStatusChange} 
					onBlur={deactivateEditeMode} 
					value={status} 
					onKeyPress={pressHeandler}
					/>
				</div>
			)}
		</div>
	);
};

export default ProfileStatusWithHooks;
